name: Generate TS Code

on:
  workflow_dispatch:  # Allows manual trigger via GitHub UI or external API call
  repository_dispatch:
    types: [trigger-from-protobuffer-ts]  # This listens for the custom event from Repository A

jobs:
  generate:
    runs-on: [runs-on,runner=2cpu-linux-x64,"run-id=${{ github.run_id }}"]

    steps:
      - name: Checkout generated-code repository
        uses: actions/checkout@v3

      - name: Checkout Protobuf repository
        uses: actions/checkout@v3
        with:
          repository: BassemLabs/protobuffer
          token: ${{ secrets.MY_GITHUB_PAT }}
          path: proto-repo

      # Step 3: Install buf CLI
      - name: Install buf CLI
        run: |
          curl -sSL https://github.com/bufbuild/buf/releases/download/v1.40.1/buf-Linux-x86_64 -o /usr/local/bin/buf
          chmod +x /usr/local/bin/buf

      # Step 4: Generate Rust code from Protobuf files
      - name: Generate TS code with buf
        run: cd proto-repo && ls -l && cat buf.gen.yaml && buf generate && ls -l ts_gen

      # Step 5: Move generated files to the src directory
      - name: Move generated files
        run: |
          rm -rf src
          mkdir src
          cp -R proto-repo/ts_gen/* src/  # Recursively copy all files and directories
          
      - name: Generate `index.ts`
        run: |
          echo "Generating index.ts with aliases..."
          echo "// Auto-generated index.ts" > src/index.ts
          find src -name "*.ts" ! -name "index.ts" | while read file; do
            base_name=$(basename "$file" .ts)
            dir_name=$(dirname "$file")
            alias=$(echo "$base_name" | sed 's/^./\U&/')  # Capitalize alias
            relative_path="${dir_name#src/}/$base_name"
            echo "import * as $alias from './$relative_path';" >> src/index.ts
            echo "export { $alias };" >> src/index.ts
          done

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Use Node.js 16 (or specify another version if needed)

      - name: Install dependencies
        run: npm install

      - name: Build the library
        run: npm run build


      # Step 8: Commit and push the generated code
      - name: Commit and push changes
        run: |
          rm -rf proto-repo
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Update generated TS code" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
