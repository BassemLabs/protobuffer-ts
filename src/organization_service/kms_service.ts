// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: organization_service/kms_service.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";
import { ObjectId } from "../utils/object_id";
import { RequestContext } from "../utils/request_context";
import { KMSKey, KMSKeyType, kMSKeyTypeFromJSON, kMSKeyTypeToJSON, kMSKeyTypeToNumber } from "./kms_key";

export const protobufPackage = "organization_service";

export interface GetKmsKeyRequest {
  context: RequestContext | undefined;
  organizationId: ObjectId | undefined;
  keyType: KMSKeyType;
}

export interface GetOrganizationKmsKeysRequest {
  context: RequestContext | undefined;
  organizationId: ObjectId | undefined;
}

export interface GetOrganizationKmsKeysResponse {
  keys: KMSKey[];
}

export interface UpdateKmsKeyRequest {
  context: RequestContext | undefined;
  organizationId: ObjectId | undefined;
  keyType: KMSKeyType;
  secretMaterial: string;
}

function createBaseGetKmsKeyRequest(): GetKmsKeyRequest {
  return { context: undefined, organizationId: undefined, keyType: KMSKeyType.GoogelAdminEmail };
}

export const GetKmsKeyRequest: MessageFns<GetKmsKeyRequest> = {
  encode(message: GetKmsKeyRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.context !== undefined) {
      RequestContext.encode(message.context, writer.uint32(10).fork()).join();
    }
    if (message.organizationId !== undefined) {
      ObjectId.encode(message.organizationId, writer.uint32(18).fork()).join();
    }
    if (message.keyType !== KMSKeyType.GoogelAdminEmail) {
      writer.uint32(24).int32(kMSKeyTypeToNumber(message.keyType));
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): GetKmsKeyRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetKmsKeyRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.context = RequestContext.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.organizationId = ObjectId.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.keyType = kMSKeyTypeFromJSON(reader.int32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GetKmsKeyRequest {
    return {
      context: isSet(object.context) ? RequestContext.fromJSON(object.context) : undefined,
      organizationId: isSet(object.organizationId) ? ObjectId.fromJSON(object.organizationId) : undefined,
      keyType: isSet(object.keyType) ? kMSKeyTypeFromJSON(object.keyType) : KMSKeyType.GoogelAdminEmail,
    };
  },

  toJSON(message: GetKmsKeyRequest): unknown {
    const obj: any = {};
    if (message.context !== undefined) {
      obj.context = RequestContext.toJSON(message.context);
    }
    if (message.organizationId !== undefined) {
      obj.organizationId = ObjectId.toJSON(message.organizationId);
    }
    if (message.keyType !== KMSKeyType.GoogelAdminEmail) {
      obj.keyType = kMSKeyTypeToJSON(message.keyType);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<GetKmsKeyRequest>, I>>(base?: I): GetKmsKeyRequest {
    return GetKmsKeyRequest.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<GetKmsKeyRequest>, I>>(object: I): GetKmsKeyRequest {
    const message = createBaseGetKmsKeyRequest();
    message.context = (object.context !== undefined && object.context !== null)
      ? RequestContext.fromPartial(object.context)
      : undefined;
    message.organizationId = (object.organizationId !== undefined && object.organizationId !== null)
      ? ObjectId.fromPartial(object.organizationId)
      : undefined;
    message.keyType = object.keyType ?? KMSKeyType.GoogelAdminEmail;
    return message;
  },
};

function createBaseGetOrganizationKmsKeysRequest(): GetOrganizationKmsKeysRequest {
  return { context: undefined, organizationId: undefined };
}

export const GetOrganizationKmsKeysRequest: MessageFns<GetOrganizationKmsKeysRequest> = {
  encode(message: GetOrganizationKmsKeysRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.context !== undefined) {
      RequestContext.encode(message.context, writer.uint32(10).fork()).join();
    }
    if (message.organizationId !== undefined) {
      ObjectId.encode(message.organizationId, writer.uint32(18).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): GetOrganizationKmsKeysRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetOrganizationKmsKeysRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.context = RequestContext.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.organizationId = ObjectId.decode(reader, reader.uint32());
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GetOrganizationKmsKeysRequest {
    return {
      context: isSet(object.context) ? RequestContext.fromJSON(object.context) : undefined,
      organizationId: isSet(object.organizationId) ? ObjectId.fromJSON(object.organizationId) : undefined,
    };
  },

  toJSON(message: GetOrganizationKmsKeysRequest): unknown {
    const obj: any = {};
    if (message.context !== undefined) {
      obj.context = RequestContext.toJSON(message.context);
    }
    if (message.organizationId !== undefined) {
      obj.organizationId = ObjectId.toJSON(message.organizationId);
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<GetOrganizationKmsKeysRequest>, I>>(base?: I): GetOrganizationKmsKeysRequest {
    return GetOrganizationKmsKeysRequest.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<GetOrganizationKmsKeysRequest>, I>>(
    object: I,
  ): GetOrganizationKmsKeysRequest {
    const message = createBaseGetOrganizationKmsKeysRequest();
    message.context = (object.context !== undefined && object.context !== null)
      ? RequestContext.fromPartial(object.context)
      : undefined;
    message.organizationId = (object.organizationId !== undefined && object.organizationId !== null)
      ? ObjectId.fromPartial(object.organizationId)
      : undefined;
    return message;
  },
};

function createBaseGetOrganizationKmsKeysResponse(): GetOrganizationKmsKeysResponse {
  return { keys: [] };
}

export const GetOrganizationKmsKeysResponse: MessageFns<GetOrganizationKmsKeysResponse> = {
  encode(message: GetOrganizationKmsKeysResponse, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    for (const v of message.keys) {
      KMSKey.encode(v!, writer.uint32(10).fork()).join();
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): GetOrganizationKmsKeysResponse {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseGetOrganizationKmsKeysResponse();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.keys.push(KMSKey.decode(reader, reader.uint32()));
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): GetOrganizationKmsKeysResponse {
    return { keys: globalThis.Array.isArray(object?.keys) ? object.keys.map((e: any) => KMSKey.fromJSON(e)) : [] };
  },

  toJSON(message: GetOrganizationKmsKeysResponse): unknown {
    const obj: any = {};
    if (message.keys?.length) {
      obj.keys = message.keys.map((e) => KMSKey.toJSON(e));
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<GetOrganizationKmsKeysResponse>, I>>(base?: I): GetOrganizationKmsKeysResponse {
    return GetOrganizationKmsKeysResponse.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<GetOrganizationKmsKeysResponse>, I>>(
    object: I,
  ): GetOrganizationKmsKeysResponse {
    const message = createBaseGetOrganizationKmsKeysResponse();
    message.keys = object.keys?.map((e) => KMSKey.fromPartial(e)) || [];
    return message;
  },
};

function createBaseUpdateKmsKeyRequest(): UpdateKmsKeyRequest {
  return { context: undefined, organizationId: undefined, keyType: KMSKeyType.GoogelAdminEmail, secretMaterial: "" };
}

export const UpdateKmsKeyRequest: MessageFns<UpdateKmsKeyRequest> = {
  encode(message: UpdateKmsKeyRequest, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.context !== undefined) {
      RequestContext.encode(message.context, writer.uint32(10).fork()).join();
    }
    if (message.organizationId !== undefined) {
      ObjectId.encode(message.organizationId, writer.uint32(18).fork()).join();
    }
    if (message.keyType !== KMSKeyType.GoogelAdminEmail) {
      writer.uint32(24).int32(kMSKeyTypeToNumber(message.keyType));
    }
    if (message.secretMaterial !== "") {
      writer.uint32(34).string(message.secretMaterial);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): UpdateKmsKeyRequest {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    let end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseUpdateKmsKeyRequest();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          if (tag !== 10) {
            break;
          }

          message.context = RequestContext.decode(reader, reader.uint32());
          continue;
        case 2:
          if (tag !== 18) {
            break;
          }

          message.organizationId = ObjectId.decode(reader, reader.uint32());
          continue;
        case 3:
          if (tag !== 24) {
            break;
          }

          message.keyType = kMSKeyTypeFromJSON(reader.int32());
          continue;
        case 4:
          if (tag !== 34) {
            break;
          }

          message.secretMaterial = reader.string();
          continue;
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): UpdateKmsKeyRequest {
    return {
      context: isSet(object.context) ? RequestContext.fromJSON(object.context) : undefined,
      organizationId: isSet(object.organizationId) ? ObjectId.fromJSON(object.organizationId) : undefined,
      keyType: isSet(object.keyType) ? kMSKeyTypeFromJSON(object.keyType) : KMSKeyType.GoogelAdminEmail,
      secretMaterial: isSet(object.secretMaterial) ? globalThis.String(object.secretMaterial) : "",
    };
  },

  toJSON(message: UpdateKmsKeyRequest): unknown {
    const obj: any = {};
    if (message.context !== undefined) {
      obj.context = RequestContext.toJSON(message.context);
    }
    if (message.organizationId !== undefined) {
      obj.organizationId = ObjectId.toJSON(message.organizationId);
    }
    if (message.keyType !== KMSKeyType.GoogelAdminEmail) {
      obj.keyType = kMSKeyTypeToJSON(message.keyType);
    }
    if (message.secretMaterial !== "") {
      obj.secretMaterial = message.secretMaterial;
    }
    return obj;
  },

  create<I extends Exact<DeepPartial<UpdateKmsKeyRequest>, I>>(base?: I): UpdateKmsKeyRequest {
    return UpdateKmsKeyRequest.fromPartial(base ?? ({} as any));
  },
  fromPartial<I extends Exact<DeepPartial<UpdateKmsKeyRequest>, I>>(object: I): UpdateKmsKeyRequest {
    const message = createBaseUpdateKmsKeyRequest();
    message.context = (object.context !== undefined && object.context !== null)
      ? RequestContext.fromPartial(object.context)
      : undefined;
    message.organizationId = (object.organizationId !== undefined && object.organizationId !== null)
      ? ObjectId.fromPartial(object.organizationId)
      : undefined;
    message.keyType = object.keyType ?? KMSKeyType.GoogelAdminEmail;
    message.secretMaterial = object.secretMaterial ?? "";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P
  : P & { [K in keyof P]: Exact<P[K], I[K]> } & { [K in Exclude<keyof I, KeysOfUnion<P>>]: never };

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create<I extends Exact<DeepPartial<T>, I>>(base?: I): T;
  fromPartial<I extends Exact<DeepPartial<T>, I>>(object: I): T;
}
