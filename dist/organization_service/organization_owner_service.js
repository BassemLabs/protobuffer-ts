"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: organization_service/organization_owner_service.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateOwnerProfileRequest = exports.GetOrganizationOwnerRequest = exports.GetOwnerRequest = exports.GetOwnerByEmailRequest = exports.CreateOwnerRequest = exports.protobufPackage = void 0;
/* eslint-disable */
const wire_1 = require("@bufbuild/protobuf/wire");
const object_id_1 = require("../utils/object_id");
const request_context_1 = require("../utils/request_context");
exports.protobufPackage = "organization_service";
function createBaseCreateOwnerRequest() {
    return { context: undefined, name: "", email: "" };
}
exports.CreateOwnerRequest = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.context !== undefined) {
            request_context_1.RequestContext.encode(message.context, writer.uint32(10).fork()).join();
        }
        if (message.name !== "") {
            writer.uint32(18).string(message.name);
        }
        if (message.email !== "") {
            writer.uint32(26).string(message.email);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseCreateOwnerRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.context = request_context_1.RequestContext.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.name = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.email = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            context: isSet(object.context) ? request_context_1.RequestContext.fromJSON(object.context) : undefined,
            name: isSet(object.name) ? globalThis.String(object.name) : "",
            email: isSet(object.email) ? globalThis.String(object.email) : "",
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.context !== undefined) {
            obj.context = request_context_1.RequestContext.toJSON(message.context);
        }
        if (message.name !== "") {
            obj.name = message.name;
        }
        if (message.email !== "") {
            obj.email = message.email;
        }
        return obj;
    },
    create(base) {
        return exports.CreateOwnerRequest.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseCreateOwnerRequest();
        message.context = (object.context !== undefined && object.context !== null)
            ? request_context_1.RequestContext.fromPartial(object.context)
            : undefined;
        message.name = object.name ?? "";
        message.email = object.email ?? "";
        return message;
    },
};
function createBaseGetOwnerByEmailRequest() {
    return { context: undefined, email: "" };
}
exports.GetOwnerByEmailRequest = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.context !== undefined) {
            request_context_1.RequestContext.encode(message.context, writer.uint32(10).fork()).join();
        }
        if (message.email !== "") {
            writer.uint32(18).string(message.email);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetOwnerByEmailRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.context = request_context_1.RequestContext.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.email = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            context: isSet(object.context) ? request_context_1.RequestContext.fromJSON(object.context) : undefined,
            email: isSet(object.email) ? globalThis.String(object.email) : "",
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.context !== undefined) {
            obj.context = request_context_1.RequestContext.toJSON(message.context);
        }
        if (message.email !== "") {
            obj.email = message.email;
        }
        return obj;
    },
    create(base) {
        return exports.GetOwnerByEmailRequest.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseGetOwnerByEmailRequest();
        message.context = (object.context !== undefined && object.context !== null)
            ? request_context_1.RequestContext.fromPartial(object.context)
            : undefined;
        message.email = object.email ?? "";
        return message;
    },
};
function createBaseGetOwnerRequest() {
    return { context: undefined, ownerId: undefined };
}
exports.GetOwnerRequest = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.context !== undefined) {
            request_context_1.RequestContext.encode(message.context, writer.uint32(10).fork()).join();
        }
        if (message.ownerId !== undefined) {
            object_id_1.ObjectId.encode(message.ownerId, writer.uint32(18).fork()).join();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetOwnerRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.context = request_context_1.RequestContext.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.ownerId = object_id_1.ObjectId.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            context: isSet(object.context) ? request_context_1.RequestContext.fromJSON(object.context) : undefined,
            ownerId: isSet(object.ownerId) ? object_id_1.ObjectId.fromJSON(object.ownerId) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.context !== undefined) {
            obj.context = request_context_1.RequestContext.toJSON(message.context);
        }
        if (message.ownerId !== undefined) {
            obj.ownerId = object_id_1.ObjectId.toJSON(message.ownerId);
        }
        return obj;
    },
    create(base) {
        return exports.GetOwnerRequest.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseGetOwnerRequest();
        message.context = (object.context !== undefined && object.context !== null)
            ? request_context_1.RequestContext.fromPartial(object.context)
            : undefined;
        message.ownerId = (object.ownerId !== undefined && object.ownerId !== null)
            ? object_id_1.ObjectId.fromPartial(object.ownerId)
            : undefined;
        return message;
    },
};
function createBaseGetOrganizationOwnerRequest() {
    return { context: undefined };
}
exports.GetOrganizationOwnerRequest = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.context !== undefined) {
            request_context_1.RequestContext.encode(message.context, writer.uint32(10).fork()).join();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetOrganizationOwnerRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.context = request_context_1.RequestContext.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return { context: isSet(object.context) ? request_context_1.RequestContext.fromJSON(object.context) : undefined };
    },
    toJSON(message) {
        const obj = {};
        if (message.context !== undefined) {
            obj.context = request_context_1.RequestContext.toJSON(message.context);
        }
        return obj;
    },
    create(base) {
        return exports.GetOrganizationOwnerRequest.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseGetOrganizationOwnerRequest();
        message.context = (object.context !== undefined && object.context !== null)
            ? request_context_1.RequestContext.fromPartial(object.context)
            : undefined;
        return message;
    },
};
function createBaseUpdateOwnerProfileRequest() {
    return { context: undefined, name: "", mainAddress: "", phoneNumber: "" };
}
exports.UpdateOwnerProfileRequest = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.context !== undefined) {
            request_context_1.RequestContext.encode(message.context, writer.uint32(10).fork()).join();
        }
        if (message.name !== undefined && message.name !== "") {
            writer.uint32(18).string(message.name);
        }
        if (message.mainAddress !== undefined && message.mainAddress !== "") {
            writer.uint32(26).string(message.mainAddress);
        }
        if (message.phoneNumber !== undefined && message.phoneNumber !== "") {
            writer.uint32(34).string(message.phoneNumber);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseUpdateOwnerProfileRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.context = request_context_1.RequestContext.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.name = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.mainAddress = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.phoneNumber = reader.string();
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            context: isSet(object.context) ? request_context_1.RequestContext.fromJSON(object.context) : undefined,
            name: isSet(object.name) ? globalThis.String(object.name) : "",
            mainAddress: isSet(object.mainAddress) ? globalThis.String(object.mainAddress) : "",
            phoneNumber: isSet(object.phoneNumber) ? globalThis.String(object.phoneNumber) : "",
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.context !== undefined) {
            obj.context = request_context_1.RequestContext.toJSON(message.context);
        }
        if (message.name !== undefined && message.name !== "") {
            obj.name = message.name;
        }
        if (message.mainAddress !== undefined && message.mainAddress !== "") {
            obj.mainAddress = message.mainAddress;
        }
        if (message.phoneNumber !== undefined && message.phoneNumber !== "") {
            obj.phoneNumber = message.phoneNumber;
        }
        return obj;
    },
    create(base) {
        return exports.UpdateOwnerProfileRequest.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseUpdateOwnerProfileRequest();
        message.context = (object.context !== undefined && object.context !== null)
            ? request_context_1.RequestContext.fromPartial(object.context)
            : undefined;
        message.name = object.name ?? "";
        message.mainAddress = object.mainAddress ?? "";
        message.phoneNumber = object.phoneNumber ?? "";
        return message;
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
