"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: organization_service/organization_profile_settings_service.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.SetStudentPrimaryIdCustomFieldRequest = exports.RemoveStudentProfileSectionRequest = exports.AddStudentProfileSectionRequest = exports.RemoveTeacherProfileSectionRequest = exports.AddTeacherProfileSectionRequest = exports.RemoveParentProfileSectionRequest = exports.AddParentProfileSectionRequest = exports.GetOrganizationProfileSettingsRequest = exports.protobufPackage = void 0;
/* eslint-disable */
const wire_1 = require("@bufbuild/protobuf/wire");
const object_id_1 = require("../utils/object_id");
const request_context_1 = require("../utils/request_context");
const organization_profile_settings_1 = require("./organization_profile_settings");
exports.protobufPackage = "organization_service";
function createBaseGetOrganizationProfileSettingsRequest() {
    return { context: undefined, organizationId: undefined };
}
exports.GetOrganizationProfileSettingsRequest = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.context !== undefined) {
            request_context_1.RequestContext.encode(message.context, writer.uint32(10).fork()).join();
        }
        if (message.organizationId !== undefined) {
            object_id_1.ObjectId.encode(message.organizationId, writer.uint32(18).fork()).join();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGetOrganizationProfileSettingsRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.context = request_context_1.RequestContext.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.organizationId = object_id_1.ObjectId.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            context: isSet(object.context) ? request_context_1.RequestContext.fromJSON(object.context) : undefined,
            organizationId: isSet(object.organizationId) ? object_id_1.ObjectId.fromJSON(object.organizationId) : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.context !== undefined) {
            obj.context = request_context_1.RequestContext.toJSON(message.context);
        }
        if (message.organizationId !== undefined) {
            obj.organizationId = object_id_1.ObjectId.toJSON(message.organizationId);
        }
        return obj;
    },
    create(base) {
        return exports.GetOrganizationProfileSettingsRequest.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseGetOrganizationProfileSettingsRequest();
        message.context = (object.context !== undefined && object.context !== null)
            ? request_context_1.RequestContext.fromPartial(object.context)
            : undefined;
        message.organizationId = (object.organizationId !== undefined && object.organizationId !== null)
            ? object_id_1.ObjectId.fromPartial(object.organizationId)
            : undefined;
        return message;
    },
};
function createBaseAddParentProfileSectionRequest() {
    return { context: undefined, organizationId: undefined, newProfileSection: organization_profile_settings_1.ProfileSection.OVERVIEW };
}
exports.AddParentProfileSectionRequest = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.context !== undefined) {
            request_context_1.RequestContext.encode(message.context, writer.uint32(10).fork()).join();
        }
        if (message.organizationId !== undefined) {
            object_id_1.ObjectId.encode(message.organizationId, writer.uint32(18).fork()).join();
        }
        if (message.newProfileSection !== organization_profile_settings_1.ProfileSection.OVERVIEW) {
            writer.uint32(24).int32((0, organization_profile_settings_1.profileSectionToNumber)(message.newProfileSection));
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseAddParentProfileSectionRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.context = request_context_1.RequestContext.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.organizationId = object_id_1.ObjectId.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.newProfileSection = (0, organization_profile_settings_1.profileSectionFromJSON)(reader.int32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            context: isSet(object.context) ? request_context_1.RequestContext.fromJSON(object.context) : undefined,
            organizationId: isSet(object.organizationId) ? object_id_1.ObjectId.fromJSON(object.organizationId) : undefined,
            newProfileSection: isSet(object.newProfileSection)
                ? (0, organization_profile_settings_1.profileSectionFromJSON)(object.newProfileSection)
                : organization_profile_settings_1.ProfileSection.OVERVIEW,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.context !== undefined) {
            obj.context = request_context_1.RequestContext.toJSON(message.context);
        }
        if (message.organizationId !== undefined) {
            obj.organizationId = object_id_1.ObjectId.toJSON(message.organizationId);
        }
        if (message.newProfileSection !== organization_profile_settings_1.ProfileSection.OVERVIEW) {
            obj.newProfileSection = (0, organization_profile_settings_1.profileSectionToJSON)(message.newProfileSection);
        }
        return obj;
    },
    create(base) {
        return exports.AddParentProfileSectionRequest.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseAddParentProfileSectionRequest();
        message.context = (object.context !== undefined && object.context !== null)
            ? request_context_1.RequestContext.fromPartial(object.context)
            : undefined;
        message.organizationId = (object.organizationId !== undefined && object.organizationId !== null)
            ? object_id_1.ObjectId.fromPartial(object.organizationId)
            : undefined;
        message.newProfileSection = object.newProfileSection ?? organization_profile_settings_1.ProfileSection.OVERVIEW;
        return message;
    },
};
function createBaseRemoveParentProfileSectionRequest() {
    return { context: undefined, organizationId: undefined, removeProfileSection: organization_profile_settings_1.ProfileSection.OVERVIEW };
}
exports.RemoveParentProfileSectionRequest = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.context !== undefined) {
            request_context_1.RequestContext.encode(message.context, writer.uint32(10).fork()).join();
        }
        if (message.organizationId !== undefined) {
            object_id_1.ObjectId.encode(message.organizationId, writer.uint32(18).fork()).join();
        }
        if (message.removeProfileSection !== organization_profile_settings_1.ProfileSection.OVERVIEW) {
            writer.uint32(24).int32((0, organization_profile_settings_1.profileSectionToNumber)(message.removeProfileSection));
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseRemoveParentProfileSectionRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.context = request_context_1.RequestContext.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.organizationId = object_id_1.ObjectId.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.removeProfileSection = (0, organization_profile_settings_1.profileSectionFromJSON)(reader.int32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            context: isSet(object.context) ? request_context_1.RequestContext.fromJSON(object.context) : undefined,
            organizationId: isSet(object.organizationId) ? object_id_1.ObjectId.fromJSON(object.organizationId) : undefined,
            removeProfileSection: isSet(object.removeProfileSection)
                ? (0, organization_profile_settings_1.profileSectionFromJSON)(object.removeProfileSection)
                : organization_profile_settings_1.ProfileSection.OVERVIEW,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.context !== undefined) {
            obj.context = request_context_1.RequestContext.toJSON(message.context);
        }
        if (message.organizationId !== undefined) {
            obj.organizationId = object_id_1.ObjectId.toJSON(message.organizationId);
        }
        if (message.removeProfileSection !== organization_profile_settings_1.ProfileSection.OVERVIEW) {
            obj.removeProfileSection = (0, organization_profile_settings_1.profileSectionToJSON)(message.removeProfileSection);
        }
        return obj;
    },
    create(base) {
        return exports.RemoveParentProfileSectionRequest.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseRemoveParentProfileSectionRequest();
        message.context = (object.context !== undefined && object.context !== null)
            ? request_context_1.RequestContext.fromPartial(object.context)
            : undefined;
        message.organizationId = (object.organizationId !== undefined && object.organizationId !== null)
            ? object_id_1.ObjectId.fromPartial(object.organizationId)
            : undefined;
        message.removeProfileSection = object.removeProfileSection ?? organization_profile_settings_1.ProfileSection.OVERVIEW;
        return message;
    },
};
function createBaseAddTeacherProfileSectionRequest() {
    return { context: undefined, organizationId: undefined, newProfileSection: organization_profile_settings_1.ProfileSection.OVERVIEW };
}
exports.AddTeacherProfileSectionRequest = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.context !== undefined) {
            request_context_1.RequestContext.encode(message.context, writer.uint32(10).fork()).join();
        }
        if (message.organizationId !== undefined) {
            object_id_1.ObjectId.encode(message.organizationId, writer.uint32(18).fork()).join();
        }
        if (message.newProfileSection !== organization_profile_settings_1.ProfileSection.OVERVIEW) {
            writer.uint32(24).int32((0, organization_profile_settings_1.profileSectionToNumber)(message.newProfileSection));
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseAddTeacherProfileSectionRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.context = request_context_1.RequestContext.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.organizationId = object_id_1.ObjectId.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.newProfileSection = (0, organization_profile_settings_1.profileSectionFromJSON)(reader.int32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            context: isSet(object.context) ? request_context_1.RequestContext.fromJSON(object.context) : undefined,
            organizationId: isSet(object.organizationId) ? object_id_1.ObjectId.fromJSON(object.organizationId) : undefined,
            newProfileSection: isSet(object.newProfileSection)
                ? (0, organization_profile_settings_1.profileSectionFromJSON)(object.newProfileSection)
                : organization_profile_settings_1.ProfileSection.OVERVIEW,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.context !== undefined) {
            obj.context = request_context_1.RequestContext.toJSON(message.context);
        }
        if (message.organizationId !== undefined) {
            obj.organizationId = object_id_1.ObjectId.toJSON(message.organizationId);
        }
        if (message.newProfileSection !== organization_profile_settings_1.ProfileSection.OVERVIEW) {
            obj.newProfileSection = (0, organization_profile_settings_1.profileSectionToJSON)(message.newProfileSection);
        }
        return obj;
    },
    create(base) {
        return exports.AddTeacherProfileSectionRequest.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseAddTeacherProfileSectionRequest();
        message.context = (object.context !== undefined && object.context !== null)
            ? request_context_1.RequestContext.fromPartial(object.context)
            : undefined;
        message.organizationId = (object.organizationId !== undefined && object.organizationId !== null)
            ? object_id_1.ObjectId.fromPartial(object.organizationId)
            : undefined;
        message.newProfileSection = object.newProfileSection ?? organization_profile_settings_1.ProfileSection.OVERVIEW;
        return message;
    },
};
function createBaseRemoveTeacherProfileSectionRequest() {
    return { context: undefined, organizationId: undefined, removeProfileSection: organization_profile_settings_1.ProfileSection.OVERVIEW };
}
exports.RemoveTeacherProfileSectionRequest = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.context !== undefined) {
            request_context_1.RequestContext.encode(message.context, writer.uint32(10).fork()).join();
        }
        if (message.organizationId !== undefined) {
            object_id_1.ObjectId.encode(message.organizationId, writer.uint32(18).fork()).join();
        }
        if (message.removeProfileSection !== organization_profile_settings_1.ProfileSection.OVERVIEW) {
            writer.uint32(24).int32((0, organization_profile_settings_1.profileSectionToNumber)(message.removeProfileSection));
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseRemoveTeacherProfileSectionRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.context = request_context_1.RequestContext.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.organizationId = object_id_1.ObjectId.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.removeProfileSection = (0, organization_profile_settings_1.profileSectionFromJSON)(reader.int32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            context: isSet(object.context) ? request_context_1.RequestContext.fromJSON(object.context) : undefined,
            organizationId: isSet(object.organizationId) ? object_id_1.ObjectId.fromJSON(object.organizationId) : undefined,
            removeProfileSection: isSet(object.removeProfileSection)
                ? (0, organization_profile_settings_1.profileSectionFromJSON)(object.removeProfileSection)
                : organization_profile_settings_1.ProfileSection.OVERVIEW,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.context !== undefined) {
            obj.context = request_context_1.RequestContext.toJSON(message.context);
        }
        if (message.organizationId !== undefined) {
            obj.organizationId = object_id_1.ObjectId.toJSON(message.organizationId);
        }
        if (message.removeProfileSection !== organization_profile_settings_1.ProfileSection.OVERVIEW) {
            obj.removeProfileSection = (0, organization_profile_settings_1.profileSectionToJSON)(message.removeProfileSection);
        }
        return obj;
    },
    create(base) {
        return exports.RemoveTeacherProfileSectionRequest.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseRemoveTeacherProfileSectionRequest();
        message.context = (object.context !== undefined && object.context !== null)
            ? request_context_1.RequestContext.fromPartial(object.context)
            : undefined;
        message.organizationId = (object.organizationId !== undefined && object.organizationId !== null)
            ? object_id_1.ObjectId.fromPartial(object.organizationId)
            : undefined;
        message.removeProfileSection = object.removeProfileSection ?? organization_profile_settings_1.ProfileSection.OVERVIEW;
        return message;
    },
};
function createBaseAddStudentProfileSectionRequest() {
    return { context: undefined, organizationId: undefined, newProfileSection: organization_profile_settings_1.ProfileSection.OVERVIEW };
}
exports.AddStudentProfileSectionRequest = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.context !== undefined) {
            request_context_1.RequestContext.encode(message.context, writer.uint32(10).fork()).join();
        }
        if (message.organizationId !== undefined) {
            object_id_1.ObjectId.encode(message.organizationId, writer.uint32(18).fork()).join();
        }
        if (message.newProfileSection !== organization_profile_settings_1.ProfileSection.OVERVIEW) {
            writer.uint32(24).int32((0, organization_profile_settings_1.profileSectionToNumber)(message.newProfileSection));
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseAddStudentProfileSectionRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.context = request_context_1.RequestContext.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.organizationId = object_id_1.ObjectId.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.newProfileSection = (0, organization_profile_settings_1.profileSectionFromJSON)(reader.int32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            context: isSet(object.context) ? request_context_1.RequestContext.fromJSON(object.context) : undefined,
            organizationId: isSet(object.organizationId) ? object_id_1.ObjectId.fromJSON(object.organizationId) : undefined,
            newProfileSection: isSet(object.newProfileSection)
                ? (0, organization_profile_settings_1.profileSectionFromJSON)(object.newProfileSection)
                : organization_profile_settings_1.ProfileSection.OVERVIEW,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.context !== undefined) {
            obj.context = request_context_1.RequestContext.toJSON(message.context);
        }
        if (message.organizationId !== undefined) {
            obj.organizationId = object_id_1.ObjectId.toJSON(message.organizationId);
        }
        if (message.newProfileSection !== organization_profile_settings_1.ProfileSection.OVERVIEW) {
            obj.newProfileSection = (0, organization_profile_settings_1.profileSectionToJSON)(message.newProfileSection);
        }
        return obj;
    },
    create(base) {
        return exports.AddStudentProfileSectionRequest.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseAddStudentProfileSectionRequest();
        message.context = (object.context !== undefined && object.context !== null)
            ? request_context_1.RequestContext.fromPartial(object.context)
            : undefined;
        message.organizationId = (object.organizationId !== undefined && object.organizationId !== null)
            ? object_id_1.ObjectId.fromPartial(object.organizationId)
            : undefined;
        message.newProfileSection = object.newProfileSection ?? organization_profile_settings_1.ProfileSection.OVERVIEW;
        return message;
    },
};
function createBaseRemoveStudentProfileSectionRequest() {
    return { context: undefined, organizationId: undefined, removeProfileSection: organization_profile_settings_1.ProfileSection.OVERVIEW };
}
exports.RemoveStudentProfileSectionRequest = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.context !== undefined) {
            request_context_1.RequestContext.encode(message.context, writer.uint32(10).fork()).join();
        }
        if (message.organizationId !== undefined) {
            object_id_1.ObjectId.encode(message.organizationId, writer.uint32(18).fork()).join();
        }
        if (message.removeProfileSection !== organization_profile_settings_1.ProfileSection.OVERVIEW) {
            writer.uint32(24).int32((0, organization_profile_settings_1.profileSectionToNumber)(message.removeProfileSection));
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseRemoveStudentProfileSectionRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.context = request_context_1.RequestContext.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.organizationId = object_id_1.ObjectId.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 24) {
                        break;
                    }
                    message.removeProfileSection = (0, organization_profile_settings_1.profileSectionFromJSON)(reader.int32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            context: isSet(object.context) ? request_context_1.RequestContext.fromJSON(object.context) : undefined,
            organizationId: isSet(object.organizationId) ? object_id_1.ObjectId.fromJSON(object.organizationId) : undefined,
            removeProfileSection: isSet(object.removeProfileSection)
                ? (0, organization_profile_settings_1.profileSectionFromJSON)(object.removeProfileSection)
                : organization_profile_settings_1.ProfileSection.OVERVIEW,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.context !== undefined) {
            obj.context = request_context_1.RequestContext.toJSON(message.context);
        }
        if (message.organizationId !== undefined) {
            obj.organizationId = object_id_1.ObjectId.toJSON(message.organizationId);
        }
        if (message.removeProfileSection !== organization_profile_settings_1.ProfileSection.OVERVIEW) {
            obj.removeProfileSection = (0, organization_profile_settings_1.profileSectionToJSON)(message.removeProfileSection);
        }
        return obj;
    },
    create(base) {
        return exports.RemoveStudentProfileSectionRequest.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseRemoveStudentProfileSectionRequest();
        message.context = (object.context !== undefined && object.context !== null)
            ? request_context_1.RequestContext.fromPartial(object.context)
            : undefined;
        message.organizationId = (object.organizationId !== undefined && object.organizationId !== null)
            ? object_id_1.ObjectId.fromPartial(object.organizationId)
            : undefined;
        message.removeProfileSection = object.removeProfileSection ?? organization_profile_settings_1.ProfileSection.OVERVIEW;
        return message;
    },
};
function createBaseSetStudentPrimaryIdCustomFieldRequest() {
    return { context: undefined, organizationId: undefined, studentPrimaryIdCustomField: undefined };
}
exports.SetStudentPrimaryIdCustomFieldRequest = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.context !== undefined) {
            request_context_1.RequestContext.encode(message.context, writer.uint32(10).fork()).join();
        }
        if (message.organizationId !== undefined) {
            object_id_1.ObjectId.encode(message.organizationId, writer.uint32(18).fork()).join();
        }
        if (message.studentPrimaryIdCustomField !== undefined) {
            object_id_1.ObjectId.encode(message.studentPrimaryIdCustomField, writer.uint32(26).fork()).join();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseSetStudentPrimaryIdCustomFieldRequest();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.context = request_context_1.RequestContext.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.organizationId = object_id_1.ObjectId.decode(reader, reader.uint32());
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.studentPrimaryIdCustomField = object_id_1.ObjectId.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            context: isSet(object.context) ? request_context_1.RequestContext.fromJSON(object.context) : undefined,
            organizationId: isSet(object.organizationId) ? object_id_1.ObjectId.fromJSON(object.organizationId) : undefined,
            studentPrimaryIdCustomField: isSet(object.studentPrimaryIdCustomField)
                ? object_id_1.ObjectId.fromJSON(object.studentPrimaryIdCustomField)
                : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.context !== undefined) {
            obj.context = request_context_1.RequestContext.toJSON(message.context);
        }
        if (message.organizationId !== undefined) {
            obj.organizationId = object_id_1.ObjectId.toJSON(message.organizationId);
        }
        if (message.studentPrimaryIdCustomField !== undefined) {
            obj.studentPrimaryIdCustomField = object_id_1.ObjectId.toJSON(message.studentPrimaryIdCustomField);
        }
        return obj;
    },
    create(base) {
        return exports.SetStudentPrimaryIdCustomFieldRequest.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseSetStudentPrimaryIdCustomFieldRequest();
        message.context = (object.context !== undefined && object.context !== null)
            ? request_context_1.RequestContext.fromPartial(object.context)
            : undefined;
        message.organizationId = (object.organizationId !== undefined && object.organizationId !== null)
            ? object_id_1.ObjectId.fromPartial(object.organizationId)
            : undefined;
        message.studentPrimaryIdCustomField =
            (object.studentPrimaryIdCustomField !== undefined && object.studentPrimaryIdCustomField !== null)
                ? object_id_1.ObjectId.fromPartial(object.studentPrimaryIdCustomField)
                : undefined;
        return message;
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
