"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               unknown
// source: organization_service/organization.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.Organization = exports.protobufPackage = void 0;
/* eslint-disable */
const wire_1 = require("@bufbuild/protobuf/wire");
const object_id_1 = require("../utils/object_id");
const onboarding_settings_1 = require("./onboarding_settings");
const organization_profile_settings_1 = require("./organization_profile_settings");
exports.protobufPackage = "organization_service";
function createBaseOrganization() {
    return {
        id: undefined,
        name: "",
        defaultDomain: "",
        domains: [],
        organizationProfileSettings: undefined,
        onboardingSettings: undefined,
    };
}
exports.Organization = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.id !== undefined) {
            object_id_1.ObjectId.encode(message.id, writer.uint32(10).fork()).join();
        }
        if (message.name !== "") {
            writer.uint32(18).string(message.name);
        }
        if (message.defaultDomain !== "") {
            writer.uint32(26).string(message.defaultDomain);
        }
        for (const v of message.domains) {
            writer.uint32(34).string(v);
        }
        if (message.organizationProfileSettings !== undefined) {
            organization_profile_settings_1.OrganizationProfileSettings.encode(message.organizationProfileSettings, writer.uint32(42).fork()).join();
        }
        if (message.onboardingSettings !== undefined) {
            onboarding_settings_1.OnboardingSettings.encode(message.onboardingSettings, writer.uint32(50).fork()).join();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseOrganization();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    if (tag !== 10) {
                        break;
                    }
                    message.id = object_id_1.ObjectId.decode(reader, reader.uint32());
                    continue;
                case 2:
                    if (tag !== 18) {
                        break;
                    }
                    message.name = reader.string();
                    continue;
                case 3:
                    if (tag !== 26) {
                        break;
                    }
                    message.defaultDomain = reader.string();
                    continue;
                case 4:
                    if (tag !== 34) {
                        break;
                    }
                    message.domains.push(reader.string());
                    continue;
                case 5:
                    if (tag !== 42) {
                        break;
                    }
                    message.organizationProfileSettings = organization_profile_settings_1.OrganizationProfileSettings.decode(reader, reader.uint32());
                    continue;
                case 6:
                    if (tag !== 50) {
                        break;
                    }
                    message.onboardingSettings = onboarding_settings_1.OnboardingSettings.decode(reader, reader.uint32());
                    continue;
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            id: isSet(object.id) ? object_id_1.ObjectId.fromJSON(object.id) : undefined,
            name: isSet(object.name) ? globalThis.String(object.name) : "",
            defaultDomain: isSet(object.defaultDomain) ? globalThis.String(object.defaultDomain) : "",
            domains: globalThis.Array.isArray(object?.domains) ? object.domains.map((e) => globalThis.String(e)) : [],
            organizationProfileSettings: isSet(object.organizationProfileSettings)
                ? organization_profile_settings_1.OrganizationProfileSettings.fromJSON(object.organizationProfileSettings)
                : undefined,
            onboardingSettings: isSet(object.onboardingSettings)
                ? onboarding_settings_1.OnboardingSettings.fromJSON(object.onboardingSettings)
                : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.id !== undefined) {
            obj.id = object_id_1.ObjectId.toJSON(message.id);
        }
        if (message.name !== "") {
            obj.name = message.name;
        }
        if (message.defaultDomain !== "") {
            obj.defaultDomain = message.defaultDomain;
        }
        if (message.domains?.length) {
            obj.domains = message.domains;
        }
        if (message.organizationProfileSettings !== undefined) {
            obj.organizationProfileSettings = organization_profile_settings_1.OrganizationProfileSettings.toJSON(message.organizationProfileSettings);
        }
        if (message.onboardingSettings !== undefined) {
            obj.onboardingSettings = onboarding_settings_1.OnboardingSettings.toJSON(message.onboardingSettings);
        }
        return obj;
    },
    create(base) {
        return exports.Organization.fromPartial(base ?? {});
    },
    fromPartial(object) {
        const message = createBaseOrganization();
        message.id = (object.id !== undefined && object.id !== null) ? object_id_1.ObjectId.fromPartial(object.id) : undefined;
        message.name = object.name ?? "";
        message.defaultDomain = object.defaultDomain ?? "";
        message.domains = object.domains?.map((e) => e) || [];
        message.organizationProfileSettings =
            (object.organizationProfileSettings !== undefined && object.organizationProfileSettings !== null)
                ? organization_profile_settings_1.OrganizationProfileSettings.fromPartial(object.organizationProfileSettings)
                : undefined;
        message.onboardingSettings = (object.onboardingSettings !== undefined && object.onboardingSettings !== null)
            ? onboarding_settings_1.OnboardingSettings.fromPartial(object.onboardingSettings)
            : undefined;
        return message;
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
